{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "hostingPlanName": { 
            "type": "string"
        },
        "sku": { 
            "type": "string",
            "allowedValues": [
                "Free",
                "Shared",
                "Basic",
                "Standard",
                "Premium"
            ],
            "defaultValue": "Free"
        },
        "workerSize": {
            "type": "string",
            "allowedValues": [
                "0",
                "1",
                "2"
            ],
            "defaultValue": "0"
        },
        "gatewayName": {
            "type": "string"
        },
        "logicAppName": {
            "type": "string"
        },
        "gatewayToApiAppSecret": {
            "defaultValue": "0000000000000000000000000000000000000000000000000000000000000000",
            "type": "securestring"
        },
        "FTPApiAppName": {
            "type": "string",
            "defaultValue": "ftpconnector"
        },
    },
    "variables": {
        "inputLogicApp": "[concat(parameters('logicAppName'),'inputgeneration')]"
    },
    "resources": [
        {
            "apiVersion": "2014-06-01",
            "name": "[parameters('hostingPlanName')]",
            "type": "Microsoft.Web/serverfarms",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "HostingPlan"
            },
            "properties": {
                "name": "[parameters('hostingPlanName')]",
                "sku": "[parameters('sku')]",
                "workerSize": "[parameters('workerSize')]",
                "numberOfWorkers": 1
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2015-04-01",
            "name": "[parameters('gatewayName')]",
            "location": "[resourceGroup().location]",
            "kind": "gateway",
            "tags": {
                "displayName": "GatewayHost"
            },
            "resources": [
                {
                    "type": "providers/links",
                    "apiVersion": "2015-01-01",
                    "name": "Microsoft.Resources/gateway",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites',parameters('gatewayName'))]"
                    ],
                    "properties": {
                        "targetId": "[resourceId('Microsoft.AppService/gateways', parameters('gatewayName'))]"
                    }
                }
            ],
            "dependsOn": [
                "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/',parameters('hostingPlanName'))]"
            ],
            "properties": {
                "name": "[parameters('gatewayName')]",
                "gatewaySiteName": "[parameters('gatewayName')]",
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('hostingPlanName'))]",
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "ApiAppsGateway_EXTENSION_VERSION",
                            "value": "latest"
                        },
                        {
                            "name": "EmaStorage",
                            "value": "D:\\home\\data\\apiapps"
                        },
                        {
                            "name": "WEBSITE_START_SCM_ON_SITE_CREATION",
                            "value": "1"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.AppService/gateways",
            "apiVersion": "2015-03-01-preview",
            "name": "[parameters('gatewayName')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "Gateway"
            },
            "resources": [
                {
                    "type": "providers/links",
                    "apiVersion": "2015-01-01",
                    "name": "Microsoft.Resources/gatewaySite",
                    "dependsOn": [
                        "[resourceId('Microsoft.AppService/gateways',parameters('gatewayName'))]"
                    ],
                    "properties": {
                        "targetId": "[resourceId('Microsoft.Web/sites',parameters('gatewayName'))]"
                    }
                },
                {
                    "type": "tokens",
                    "apiVersion": "2015-03-01-preview",
                    "location": "[resourceGroup().location]",
                    "name": "[variables('inputLogicApp')]",
                    "tags": {
                        "displayName": "AuthenticationToken"
                    },
                    "dependsOn": [
                        "[resourceId('Microsoft.AppService/gateways', parameters('gatewayName'))]"
                    ]
                }
            ],
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('gatewayName'))]"
            ],
            "properties": {
                "host": {
                    "resourceName": "[parameters('gatewayName')]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2015-02-01-preview",
            "name": "[variables('inputLogicApp')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "[variables('inputLogicApp')]"
            },
            "properties": {
                "sku": {
                    "name": "[parameters('sku')]",
                    "plan": {
                        "id": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/',parameters('hostingPlanName'))]"
                    }
                },
                "definition": {
                    "$schema": "http://schema.management.azure.com/providers/Microsoft.Logic/schemas/2014-12-01-preview/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "token": {
                            "defaultValue": "[reference(resourceId('Microsoft.AppService/gateways/tokens', parameters('gatewayName'), variables('inputLogicApp'))).token]",
                            "type": "String",
                            "metadata": {
                                "token": {
                                    "name": "token"
                                }
                            }
                        }
                    },
                    "triggers": {
                        "recurrence": {
                            "type": "Recurrence",
                            "recurrence": {
                                "frequency": "Hour",
                                "interval": 1
                            }
                        }
                    },
                    "actions": {
                        "ftpconnector": {
                            "type": "ApiApp",
                            "inputs": {
                                "apiVersion": "2015-01-14",
                                "host": {
                                    "id": "[concat(resourceGroup().id, '/providers/Microsoft.AppService/apiApps/',parameters('FTPApiAppName'))]",
                                    "gateway": "[concat('https://', reference(resourceId('Microsoft.Web/sites', parameters('gatewayName'))).hostNames[0])]"
                                },
                                "operation": "UploadFile",
                                "parameters": {
                                    "content": {
                                        "Content": "TV,2,300",
                                        "ContentTransferEncoding": "None"
                                    },
                                    "FilePath": "@concat('in/',guid(),'.txt')",
                                    "AppendIfExists": false
                                },
                                "authentication": { 
                                    "type": "Raw",
                                    "scheme": "Zumo",
                                    "parameter": "@parameters('token')"
                                }
                            },
                            "conditions": [ ]
                        }
                    },
                    "outputs": { }
                },
                "parameters": { }
            }
        }
    ],
    "outputs": {

    }
}